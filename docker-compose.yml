version: '1'

services:
  grafana:
    image: grafana/grafana-oss
    volumes:
      - grafana-storage:/var/lib/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    depends_on:
      prometheus:
        condition: service_started

  prometheus:
    build:
      context: .
      dockerfile: prometheus.Dockerfile
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - prometheus:/prometheus
    restart: unless-stopped

  speedtest-exporter:
    image: miguelndecarvalho/speedtest-exporter
    container_name: speedtest-exporter
    restart: unless-stopped

  blackbox-exporter:
    build:
      context: .
      dockerfile: blackbox-exporter.Dockerfile
    container_name: blackbox-exporter
    restart: unless-stopped

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "80:80/tcp"
      - "53:53/tcp"
      - "53:53/udp"
    environment:
      TZ: 'Europe/Zurich'
      WEBPASSWORD: '96XBd4S6!eREoN&J'
      PIHOLE_DNS: 1.1.1.1
    volumes:
      - 'pihole:/etc/pihole'
      - 'pihole-dnsmasq:/etc/dnsmasq.d'
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "80" ]
      interval: 10s
      timeout: 5s
      retries: 5

#  pihole-exporter:
#    image: ekofr/pihole-exporter:latest
#    container_name: pihole-exporter
#    environment:
#      PIHOLE_HOSTNAME: pihole
#      PIHOLE_PASSWORD: 96XBd4S6!eREoN&J
#      PORT: 9617
#    depends_on:
#      pihole:
#        condition: service_healthy

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: grafana_postgres_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 96XBd4S6!eREoN&J
    volumes:
      - 'postgres:/var/lib/postgresql/data'
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  grafana-postgres-service:
    image: cr1n993r/webhook-postgres-service
    container_name: grafana_postgres_service
    environment:
      DB_HOST: postgres
      DB_PASSWORD: 96XBd4S6!eREoN&J
      DB_USER: postgres
    ports:
      - 2113:2113
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

volumes:
  grafana-storage:
    driver: local
  pihole:
    driver: local
  pihole-dnsmasq:
    driver: local
  postgres:
    driver: local
  prometheus:
    driver: local

